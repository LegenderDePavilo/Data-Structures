#include<stdio.h>
#include<stdlib.h>
#include<ctype.h>
struct node
{
char data;
struct node *next;
};
void deletenode(struct node *temp,int);
main()
{
int i=0,j=0,l=0,k=0,p,r=0,t,a,b,d,carry=0,marry=0,q;
struct node *temp,*head,*road,*home,*newe,*few;
head=(struct node *)malloc(sizeof (struct node));
home=(struct node *)malloc(sizeof (struct node));
newe=(struct node *)malloc(sizeof (struct node));
temp=head;
road=home;
few=newe;
printf("\nEnter the first number : ");
while(((temp->data)=getchar())!='\n')
{
temp->next=(struct node *)malloc(sizeof (struct node));
temp=temp->next;
l++;
}
temp->next=NULL;
temp=head;
printf("\nThe first number is : ");
while(temp!=NULL)
{
putchar(temp->data);
temp=temp->next;
}
printf("\nEnter the second number : ");
while(((road->data)=getchar())!='\n')
{
road->next=(struct node *)malloc(sizeof (struct node));
road=road->next;
k++;
}
road->next=NULL;
printf("%d,%d",l,k);
road=home;
printf("\nThe second number is : ");
while(road!=NULL)
{
putchar(road->data);
road=road->next;
}
p=0;
while(p<l+k-1)
{
few->data='0';
few->next=(struct node *)malloc(sizeof (struct node));
few=few->next;
++p;
}
few->next=NULL;
few=newe;
while(few->next!=NULL)
{
putchar(few->data);
few=few->next;
}
few=newe;
temp=head;
while(temp!=NULL)
{
++i;
if((temp->data)=='.')
break;
temp=temp->next;
}
printf("\n%d",i);
road=home;
while(road!=NULL)
{
++j;
if((road->data)=='.')
break;
road=road->next;
}
printf("\n%d",j);
temp=head;
road=home;
deletenode(temp,i);
deletenode(road,j);
temp=NULL;
struct node *nextnode=NULL;
while(head)
{
nextnode=head->next;
head->next=temp;
temp=head;
head=nextnode;
}
head=temp;
printf("\nThe reverse of the first number is : ");
while(head!=NULL)
{
putchar(head->data);
head=head->next;
}
road=NULL;
struct node *nextmode=NULL;
while(home)
{
nextmode=home->next;
home->next=road;
road=home;
home=nextmode;
}
home=road;
printf("\nThe reverse of the second number is : ");
while(home!=NULL)
{
putchar(home->data);
home=home->next;
}
head=temp;
home=road;
few=newe;
while(head!=NULL)
{
++r;
t=r;
carry=0;
home=road;
a=(head->data)-48;
while(home!=NULL)
{
b=(home->data)-48;
d=a*b+carry;
if(d>9)
{
carry=d/10;
d=d%10;
}
q=(few->data)-48+d+marry;
if(q>9)
{
marry=q/10;
q=q%10;
}
few->data=(q+48);
few=few->next;
home=home->next;
}
few->data=((((few->data)-48)+carry+marry)+48);
head=head->next;
few=newe;
while(t)
{
few=few->next;
--t;
}
}
few=newe;
printf("\nThe multiplied number is : ");
while(few->next!=NULL)
{
putchar(few->data);
few=few->next;
}
}
void deletenode(struct node *temp,int i)
{   struct node *t,*q;
int k=1;
if(temp==NULL)
{
printf("\nList empty");
}
t=temp;
if(i==1)
{
temp=temp->next;
free(t);
}
else
{
while((t!=NULL)&&(k<i))
{
k++;
q=t;
t=t->next;
}
if(t==NULL)
printf("\nPosition does not exist");
else{
q->next=t->next;
free(t);
}
}
return;
}

